version: '3.9'
services:
  api:
    build:
      context: ../..
      dockerfile: app/infra/docker/api.Dockerfile
    env_file: ../../.env.example
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/app
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: miniosecret
      S3_BUCKET: zoris-local
    volumes:
      - ../..:/workspace
    working_dir: /workspace
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
      - redis
      - minio
    ports:
      - '8000:8000'
  web:
    build:
      context: ../..
      dockerfile: app/infra/docker/web.Dockerfile
    env_file: ../../.env.example
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      API_INTERNAL_URL: http://api:8000
    volumes:
      - ../..:/workspace
    working_dir: /workspace/app/web
    command: npm run dev
    depends_on:
      - api
    ports:
      - '3000:3000'
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
  redis:
    image: redis:7
    ports:
      - '6379:6379'
  minio:
    image: minio/minio:RELEASE.2023-09-07T02-05-02Z
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: miniosecret
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
  celery:
    build:
      context: ../..
      dockerfile: app/infra/docker/api.Dockerfile
    env_file: ../../.env.example
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/app
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: miniosecret
      S3_BUCKET: zoris-local
    volumes:
      - ../..:/workspace
    working_dir: /workspace
    command: celery -A app.api.workers worker -l info
    depends_on:
      - redis
      - db
      - minio
